// <auto-generated />
using System;
using Exp3.Persistencia;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Exp3.Migrations
{
    [DbContext(typeof(ParqueDiversaoContext))]
    [Migration("20220216151335_AdicaoChaveData")]
    partial class AdicaoChaveData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Exp3.Models.Brinquedo", b =>
                {
                    b.Property<int>("BrinquedoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataFabricacao")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ManutencaoId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasMaxLength(55)
                        .HasColumnType("nvarchar(55)");

                    b.Property<bool>("PrecisaAcompanhante")
                        .HasColumnType("bit");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<double?>("Valor")
                        .HasColumnType("float");

                    b.HasKey("BrinquedoId");

                    b.HasIndex("ManutencaoId");

                    b.ToTable("Tbt_Brinquedo");
                });

            modelBuilder.Entity("Exp3.Models.BrinquedoColaborador", b =>
                {
                    b.Property<int>("BrinquedoId")
                        .HasColumnType("int");

                    b.Property<int>("ColaboradorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.HasKey("BrinquedoId", "ColaboradorId", "Data");

                    b.HasIndex("ColaboradorId");

                    b.ToTable("Tbl_Brinquedo_Colaborador");
                });

            modelBuilder.Entity("Exp3.Models.Colaborador", b =>
                {
                    b.Property<int>("ColaboradorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContratoTrabalhoId")
                        .HasColumnType("int");

                    b.Property<string>("Especialidade")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("ColaboradorId");

                    b.HasIndex("ContratoTrabalhoId");

                    b.ToTable("Tbl_Colaborador");
                });

            modelBuilder.Entity("Exp3.Models.ContratoTrabalho", b =>
                {
                    b.Property<int>("ContratoTrabalhoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataContratacao")
                        .HasColumnType("date")
                        .HasColumnName("Dt_Contratacoes");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<double>("ValorSalario")
                        .HasColumnType("float");

                    b.HasKey("ContratoTrabalhoId");

                    b.ToTable("ContratosTrabalhos");
                });

            modelBuilder.Entity("Exp3.Models.Manutencao", b =>
                {
                    b.Property<int>("ManutencaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ManutencaoEmDia")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<double>("Valor")
                        .HasColumnType("float");

                    b.HasKey("ManutencaoId");

                    b.ToTable("Manutencoes");
                });

            modelBuilder.Entity("Exp3.Models.Brinquedo", b =>
                {
                    b.HasOne("Exp3.Models.Manutencao", "Manutencao")
                        .WithMany("Brinquedos")
                        .HasForeignKey("ManutencaoId");

                    b.Navigation("Manutencao");
                });

            modelBuilder.Entity("Exp3.Models.BrinquedoColaborador", b =>
                {
                    b.HasOne("Exp3.Models.Brinquedo", "Brinquedo")
                        .WithMany("BrinquedosColaboradores")
                        .HasForeignKey("BrinquedoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Exp3.Models.Colaborador", "Colaborador")
                        .WithMany("BrinquedosColaboradores")
                        .HasForeignKey("ColaboradorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brinquedo");

                    b.Navigation("Colaborador");
                });

            modelBuilder.Entity("Exp3.Models.Colaborador", b =>
                {
                    b.HasOne("Exp3.Models.ContratoTrabalho", "ContratoTrabalho")
                        .WithMany()
                        .HasForeignKey("ContratoTrabalhoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContratoTrabalho");
                });

            modelBuilder.Entity("Exp3.Models.Brinquedo", b =>
                {
                    b.Navigation("BrinquedosColaboradores");
                });

            modelBuilder.Entity("Exp3.Models.Colaborador", b =>
                {
                    b.Navigation("BrinquedosColaboradores");
                });

            modelBuilder.Entity("Exp3.Models.Manutencao", b =>
                {
                    b.Navigation("Brinquedos");
                });
#pragma warning restore 612, 618
        }
    }
}
